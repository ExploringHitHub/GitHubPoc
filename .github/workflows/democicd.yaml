name: DemoCICD Pipeline
on:
  push:
    branches:
     - feature/*
     - develop
     - main
jobs:
    configuring_Environment:
        runs-on: ubuntu-latest
        steps:
            # Checkout the source code
            - name: 'Checkout source code'
              uses: actions/checkout@v4

            - name: Set up Nodejs
              id: setup-node
              uses: actions/setup-node@v4
              with:
                node-version: 20.15.0    
            
            - name: Cache dependencies
              id: cache-node-modules
              uses: actions/cache@v1
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ steps.setup-node.outputs.node-version }}-modules-${{ hashFiles('package-lock.json') }} 

            - name: Install dependencies
              run: |
               npm install
               npm ci
               
            - name: Install PMD
              run: |
                PMD_VERSION=`cat pmd/pmd-version.txt`
                wget https://github.com/pmd/pmd/releases/download/pmd_releases%2F$PMD_VERSION/pmd-bin-$PMD_VERSION.zip
                unzip pmd-bin-$PMD_VERSION.zip -d ~
                mv ~/pmd-bin-$PMD_VERSION ~/pmd
                ~/pmd/bin/run.sh pmd --version

            - name: 'Run PMD scan'
              run: ~/pmd/bin/run.sh pmd -d force-app -R pmd/ruleset.xml -f text

    Authentication_with_Salesforce:
        runs-on: ubuntu-latest
        steps:
            - name: Authentication with Dev Environment
              run: |
                echo " ${{ secrets.SFDX_AUTH_URL }} > ./authFile.txt"
                sfdx force:auth:sfdxurl:store -f ./authFile.txt --setalias target_poc -s
                sfdx force:org:display
            
            - name: Validation of the checkout code against the target Org(Salesforce)
              run: |
                ls -ltr
                sfdx force:source:deploy -c -p force-app -u target_poc
                if [ $? -eq 0 ] 
                then
                echo "Validation is successful,Proceeding with deployment"
                else
                echo "Validation failed"
                fi
            - name: Deployment to target Org
              run: |
               ls -lrt
                
